AWSTemplateFormatVersion: '2010-09-09'
Description: 'python-example

  Sample SAM Template for python-example

  '
Globals:
  Function:
    Timeout: 3
Resources:
  BillingIamRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action: cloudwatch:*
            Effect: Allow
            Resource: '*'
          - Action: ses:*
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: billing_mail_for_lambda
    Type: AWS::IAM::Role
  HelloWorldFunction:
    Properties:
      CodeUri: s3://sam-lambda-python-sample/18f3e609e357138eab0d03bb9ed3de48
      Events:
        HelloWorld:
          Properties:
            Method: get
            Path: /hello
          Type: Api
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
        - BillingIamRole
        - Arn
      Runtime: python3.7
    Type: AWS::Serverless::Function
  TaskDynamoDBTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: Id
        AttributeType: N
      BillingMode: PAY_PER_REQUEST
      KeySchema:
      - AttributeName: Id
        KeyType: HASH
      TableName: Task
    Type: AWS::DynamoDB::Table
Transform: AWS::Serverless-2016-10-31
